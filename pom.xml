<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.jdufner.games.sudoku</groupId>
  <artifactId>sudoku</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>21</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <assertj-core.version>3.26.3</assertj-core.version>
    <jacoco.version>0.8.12</jacoco.version>
    <jacoco.outputDir>${project.build.directory}/coverage-reports</jacoco.outputDir>
    <jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
    <jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
    <junit.version>4.13.2</junit.version>
    <sonar.language>java</sonar.language>
    <sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
    <sonar.junit.reportsPath>${project.build.directory}/surefire-reports</sonar.junit.reportsPath>
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
    <sonar.jacoco.reportPaths>${jacoco.outputDir}/${jacoco.out.ut.file}, ${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.reportPaths>
    <spring.boot.version>3.3.1</spring.boot.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.itextpdf</groupId>
        <artifactId>itextpdf</artifactId>
        <version>5.5.13.4</version>
      </dependency>
      <dependency>
        <groupId>jakarta.persistence</groupId>
        <artifactId>jakarta.persistence-api</artifactId>
        <version>3.2.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.14.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-math3</artifactId>
        <version>3.6.1</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-core</artifactId>
        <version>6.5.2.Final</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>2.0.13</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>2.0.13</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj-core.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>4.0.0.4121</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.3.1</version>
        <configuration>
          <forkCount>0</forkCount>
          <!-- Sets the VM argument line used when unit tests are run. -->
          <argLine>${surefireArgLine}</argLine>
          <!-- Skips unit tests if the value of skip.unit.tests property is true -->
          <skipTests>${skip.unit.tests}</skipTests>
          <includes>
            <include>**/*Test.java</include>
            <include>**/*CT.java</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!-- Sets the VM argument line used when integration tests are run. -->
          <argLine>${failsafeArgLine}</argLine>
          <!-- Skips integration tests if the value of skip.integration.tests property is true -->
          <skipTests>${skip.integration.tests}</skipTests>
          <includes>
            <include>**/*AT.java</include>
            <include>**/*IT.java</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>3.1.1</version>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.7.1</version>
        <configuration>
          <descriptorRefs>
            <descriptorRef>project</descriptorRef>
          </descriptorRefs>
        </configuration>
        <executions>
          <execution>
            <id>create-archive</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <!-- Prepares the property pointing to the JaCoCo runtime agent which is passed as VM argument when Maven the Surefire plugin
            is executed. -->
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <append>true</append>
              <!-- Sets the path to the file which contains the execution data. -->
              <destFile>${jacoco.outputDir}/${jacoco.out.ut.file}</destFile>
              <!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
              <propertyName>surefireArgLine</propertyName>
            </configuration>
          </execution>
          <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run. -->
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <!-- Sets the path to the file which contains the execution data. -->
              <dataFile>${jacoco.outputDir}/${jacoco.out.ut.file}</dataFile>
              <!-- Sets the output directory for the code coverage report. -->
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
            </configuration>
          </execution>
          <!-- Prepares the property pointing to the JaCoCo runtime agent which is passed as VM argument when Maven the Failsafe plugin
            is executed. -->
          <execution>
            <id>pre-integration-test</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <append>true</append>
              <!-- Sets the path to the file which contains the execution data. -->
              <destFile>${jacoco.outputDir}/${jacoco.out.it.file}</destFile>
              <!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
              <propertyName>failsafeArgLine</propertyName>
            </configuration>
          </execution>
          <!-- Ensures that the code coverage report for integration tests after integration tests have been run. -->
          <execution>
            <id>post-integration-test</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <!-- Sets the path to the file which contains the execution data. -->
              <dataFile>${jacoco.outputDir}/${jacoco.out.it.file}</dataFile>
              <!-- Sets the output directory for the code coverage report. -->
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>report-aggregate</id>
            <phase>verify</phase>
            <goals>
              <goal>report-aggregate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>qa</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>3.4.0</version>
            <dependencies>
              <dependency>
                <groupId>de.jdufner.games.sudoku</groupId>
                <artifactId>build-tools</artifactId>
                <version>1.0</version>
              </dependency>
              <dependency>
                <groupId>com.puppycrawl.tools</groupId>
                <artifactId>checkstyle</artifactId>
                <version>10.17.0</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <configLocation>google_checks.xml</configLocation>
              <consoleOutput>true</consoleOutput>
              <logViolationsToConsole>true</logViolationsToConsole>
              <failOnViolation>false</failOnViolation>
              <failsOnError>true</failsOnError>
              <linkXRef>false</linkXRef>
            </configuration>
          </plugin>
          <!-- Es ist keine gute Idee das Dependency-Plugin mit Spring Boot zu verwenden -->
          <!--plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>3.0.0</version>
          </plugin-->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <version>3.24.0</version>
            <dependencies>
              <dependency>
                <groupId>de.jdufner.games.sudoku</groupId>
                <artifactId>build-tools</artifactId>
                <version>1.0</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                  <goal>cpd-check</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <linkXref>true</linkXref>
              <sourceEncoding>utf-8</sourceEncoding>
              <minimumTokens>100</minimumTokens>
              <failOnViolation>false</failOnViolation>
              <failurePriority>4</failurePriority>
              <rulesets>
                <ruleset>ruleset.xml</ruleset>
              </rulesets>
            </configuration>
          </plugin>
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <version>4.8.6.2</version>
            <executions>
              <execution>
                <id>run-spotbugs</id>
                <phase>verify</phase>
                <goals>
                  <goal>spotbugs</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <failOnError>false</failOnError>
              <xmlOutput>true</xmlOutput>
              <threshold>Low</threshold>
              <effort>Max</effort>
              <fork>true</fork>
              <includeTests>true</includeTests>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
            <version>10.0.2</version>
            <configuration>
              <cveValidForHours>12</cveValidForHours>
              <failBuildOnCVSS>11</failBuildOnCVSS>
              <format>XML</format>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <!-- Activate, if plugin can't connect to the database. -->
                  <!--goal>purge</goal-->
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctor-maven-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
              <execution>
                <id>output-html</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <backend>html5</backend>
              <sourceHighlighter>coderay</sourceHighlighter>
              <attributes>
                <toc>left</toc>
                <sectnums>true</sectnums>
              </attributes>
            </configuration>
          </plugin>
        </plugins>
      </build>

      <reporting>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>3.0.0</version>
            <reportSets>
              <reportSet>
                <reports>
                  <report>checkstyle</report>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <version>3.24.0</version>
            <configuration>
              <linkXref>true</linkXref>
              <sourceEncoding>utf-8</sourceEncoding>
              <minimumTokens>100</minimumTokens>
              <targetJdk>1.8</targetJdk>
              <excludes>
                <exclude>**/generated/*.java</exclude>
              </excludes>
              <excludeRoots>
                <excludeRoot>target/generated-sources/stubs</excludeRoot>
              </excludeRoots>
            </configuration>
          </plugin>
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <version>4.8.6.2</version>
            <configuration>
              <!--
                  Enables analysis which takes more memory but finds more bugs.
                  If you run out of memory, changes the value of the effort element
                  to 'low'.
              -->
              <effort>Max</effort>
              <!-- Reports all bugs (other values are medium and max) -->
              <threshold>Low</threshold>
              <!-- Produces XML report -->
              <xmlOutput>true</xmlOutput>
              <!-- Configures the directory in which the XML report is created -->
              <findbugsXmlOutputDirectory>${project.build.directory}/findbugs</findbugsXmlOutputDirectory>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
            <version>10.0.2</version>
            <configuration>
              <name>Dependency Check</name>
            </configuration>
            <reportSets>
              <reportSet>
                <reports>
                  <report>aggregate</report>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
        </plugins>
      </reporting>
    </profile>
  </profiles>

  <licenses>
    <license>
      <name>GNU General Public License 3</name>
      <url>https://www.gnu.org/licenses/gpl-3.0.html</url>
    </license>
  </licenses>

  <issueManagement>
    <url>https://github.com/jdufner/sudoku/issues</url>
    <system>GitHub Issues</system>
  </issueManagement>

  <scm>
    <connection>scm:git:git@github.com:jdufner/sudoku.git</connection>
    <developerConnection>scm:git:git@github.com:jdufner/sudoku.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <developers>
    <developer>
      <id>jdufner</id>
      <name>Jürgen Dufner</name>
      <email>juergen@jdufner.de</email>
      <timezone>Europe/Berlin</timezone>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>

  <modules>
    <module>build-tools</module>
    <module>solver</module>
    <module>generator</module>
    <module>pdf</module>
    <module>server</module>
  </modules>

</project>
