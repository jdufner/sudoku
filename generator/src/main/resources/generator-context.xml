<?xml version="1.0" encoding="UTF-8"?>
  <!--
		$Id$
	-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">

  <import resource="solver-context.xml" />

  <bean id="abstractBuilder" abstract="true" class="de.jdufner.sudoku.builder.AbstractBuilder">
    <property name="strategySolverWithBacktracking" ref="strategySolverWithBacktracking" />
  </bean>

  <bean id="randomEleminationBuilder" class="de.jdufner.sudoku.builder.RandomEleminationBuilder" parent="abstractBuilder"
    scope="prototype">
  </bean>

  <bean id="symetricRandomEleminationBuilder" class="de.jdufner.sudoku.builder.SymetricRandomEleminationBuilder"
    parent="abstractBuilder" scope="prototype">
  </bean>

  <bean id="literalEleminationBuilder" class="de.jdufner.sudoku.builder.LiteralEleminationBuilder" parent="abstractBuilder"
    scope="prototype">
  </bean>

  <bean id="sudokuGenerator" class="de.jdufner.sudoku.generator.service.SudokuGeneratorService">
    <property name="sudokuDao" ref="sudokuDao" />
  </bean>

  <bean id="pdfPrinter" class="de.jdufner.sudoku.generator.pdf.PdfPrinterImpl">
    <property name="pdfStyle" ref="pdfStyle" />
  </bean>

  <bean id="pdfGenerator" class="de.jdufner.sudoku.generator.service.PdfGeneratorService">
    <property name="pdfPrinter" ref="pdfPrinter" />
    <property name="sudokuDao" ref="sudokuDao" />
    <property name="solver" ref="strategySolverWithBacktracking" />
    <!-- Configuration -->
    <property name="fileDirectory" value="D:\tmp" />
    <property name="filePattern" value="'Sudoku_'yyyy-MM-dd'T'kkmmss" />
  </bean>

  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="com.mysql.jdbc.Driver" />
    <property name="url" value="jdbc:mysql://localhost/sudoku" />
    <property name="username" value="root" />
    <property name="password" value="dbadmin" />
  </bean>

  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
        <!--prop key="hibernate.hbm2ddl.auto">create</prop-->
      </props>
    </property>
    <property name="annotatedClasses">
      <list>
        <value>de.jdufner.sudoku.dao.SudokuData</value>
      </list>
    </property>
  </bean>

  <bean id="sudokuDao" class="de.jdufner.sudoku.dao.SudokuDaoImpl">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <!-- similarly, don't forget the PlatformTransactionManager -->
  <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>

  <!--
		the transactional advice (what 'happens'; see the <aop:advisor/> bean
		below)
	-->
  <tx:advice id="txAdvice" transaction-manager="txManager">
    <!-- the transactional semantics... -->
    <tx:attributes>
      <!-- all methods starting with 'get' are read-only -->
      <!--tx:method name="get*" read-only="true"/-->
      <!-- other methods use the default transaction settings (see below) -->
      <tx:method name="*" />
    </tx:attributes>
  </tx:advice>

  <!--
    ensure that the above transactional advice runs for any execution of an operation defined by the FooService
    interface
  -->
  <aop:config>
    <aop:pointcut id="sudokuOperation" expression="execution(* de.jdufner.sudoku.dao.SudokuDao.*(..))" />
    <aop:advisor advice-ref="txAdvice" pointcut-ref="sudokuOperation" />
  </aop:config>

  <util:properties id="pdfStyle" location="classpath:de/jdufner/sudoku/generator/pdf/style.properties" />

</beans>
